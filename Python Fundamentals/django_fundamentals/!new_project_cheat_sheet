CHEATSHEET
  django-admin startproject project_name
  cd project_name
  mkdir apps
  cd apps
  touch __init__.py
  python ../manage.py startapp app_name
  update MAIN settings.py "installed_apps" section with the name 'apps.app_name'
  update MAIN urls.py
  create APP_NAME urls.py
  update APP_NAME view.py
  create APP_NAME index.html
  python ../manage.py makemigrations
  python ../manage.py migrate
  python ../manage.py runserver

  CREATE/UPDATE urls.py files as needed
    MAIN urls.py:
    -------------------------------------------
      from django.conf.urls import url, include

      urlpatterns = [
          url(r'^', include('apps.index.urls')),
      ]
    -------------------------------------------

    APP_NAME urls.py:
    -------------------------------------------
      from django.conf.urls import url
      from . import views

      urlpatterns = [
        url('^$', views.index),
      ]
    -------------------------------------------

    APP_NAME views.py
    -------------------------------------------
    from django.shortcuts import render, HttpResponse, redirect
    from .models import *
    from django.contrib import messages
    import bcrypt

    def index(request):
      try:    
        errors = User.objects.basic_validator(request.POST)
        if len(errors):
          for key, value in errors.items():
            messages.error(request, value)
          return redirect('/')
      except:
        pass

      context = {
        "somekey" : "hello"
      }
      request.session["test"] = 'session test'
      return render(request, "index/index.html", context)
    -------------------------------------------

    APP_NAME models.py
    -------------------------------------------
    from __future__ import unicode_literals
    from django.db import models

    class UserManager(models.Manager):
      def basic_vaildator(self, postData):
        errors = {}
        if len(postData["first_name"]) < 5:
          errors["first_name"] = "First name should be at least 5 characters"
        if len(postData["last_name"]) < 5:
          errors["last_name"] = "Last name should be at least 5 characters"
        if len(postData["password"]) < 8:
          errors["password"] = "Password should be at least 8 characters"
        return errors

    class User(models.Model):
      first_name = models.CharField(max_length=50)
      last_name = models.CharField(max_length=50)
      email = models.EmailField(max_length=50)
      password = models.CharField(max_length=100)
      created_at = models.DateTimeField(auto_now_add = True)
      updated_at = models.DateTimeField(auto_now_add = True)
      objects = UserManager()

      def __str__(self):
        return "Name: " + self.name + "City: " + self.city    

      def __repr__(self):
        return "<Blog object: {} {}>".format(self.name, self.desc)

    class Dojo(models.Model):
      name = models.CharField(max_length=255)
      city = models.CharField(max_length=255)
      state = models.CharField(max_length=2)
      books = models.ManyToManyField(Book, related_name="publishers")
      notes = models.TextField()
      created_at = models.DateTimeField(auto_now_add = True)
      updated_at = models.DateTimeField(auto_now_add = True)

    class Ninja(models.Model):
      dojo = models.ForeignKey(Dojo, related_name="ninjas")
      created_at = models.DateTimeField(auto_now_add = True)
      updated_at = models.DateTimeField(auto_now_add = True)
    -------------------------------------------

    APP_NAME index.html
    -------------------------------------------
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <meta http-equiv="X-UA-Compatible" content="ie=edge">
      {% load static %}
      <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
      <script type="text/javascript" src="{% static 'index/js/index.js' %}"></script>
      <link rel="stylesheet" type="text/css" href="{% static 'index/css/style.css' %}" />
      <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/css/materialize.min.css">
      <title>Document</title>

    </head>
    <body>
      <div class="container">

        <div class="row">
          <div class="col s12 m12">
            <div class="input-field col s6">
              <form>
                <p>{{ request.session.test }}</p>
                {% csrf_token %}
                <span>Your Name:</span>
                <input type="text" name="name">
              </form>
            </div>
          </div>
        </div>

      </div>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-beta/js/materialize.min.js"></script>
    </body>
    </html>
    -------------------------------------------